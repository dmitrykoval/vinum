name: Build and upload to PyPI

on:
 release:
   types:
     - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
       include:
         - os: ubuntu-20.04
           linux-image: "manylinux2010"
         - os: ubuntu-20.04
           linux-image: "manylinux2014"
         - os: macos-10.15
           linux-image: ""

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements-dev.txt

      - name: Build wheels
        uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBUILDWHEEL: 1
          CIBW_BEFORE_BUILD_LINUX: pip install pyarrow
          CIBW_BUILD: cp37-* cp38-* cp39-*
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.linux-image }}
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:`python -c 'import pyarrow;print(pyarrow.get_library_dirs()[0])'` auditwheel repair -w {dest_dir} {wheel}"

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: release
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements-dev.txt

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          name: release
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: release
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI }}